{"version":3,"file":"static/js/754.a3246c90.chunk.js","mappings":"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","sources":["components/Todo.tsx","sites/LandingPage.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport ITodo from \"../types/Todo\";\n\ntype TodoProps = {\n    todo: ITodo;\n    todos: ITodo[];\n    setTodos: React.Dispatch<React.SetStateAction<ITodo[]>>\n};\n\nconst Todo: React.FC<TodoProps> = ({ todo, todos, setTodos }) => {\n    const [title, setTitle] = useState<string>(todo.title);\n    const [editable, setEditable] = useState<boolean>(false);\n    const inputStyle = \"py-2 px-3 border bg-black focus:shadow-glow-2 disabled:bg-black disabled:border-0\";\n\n    const deleteTodo = (id: string) => {\n        const updatedTodos = todos.filter((todo) => todo.id !== id);\n        setTodos(updatedTodos);\n        localStorage.setItem(\"todos\", JSON.stringify(updatedTodos));\n    }\n\n    const handleCompletion = (id: string) => {\n        const updatedTodos = todos.map((todo) => {\n            if (todo.id === id) {\n                todo.completed = !todo.completed;\n            }\n\n            return todo;\n        });\n\n        setTodos(updatedTodos);\n        localStorage.setItem(\"todos\", JSON.stringify(updatedTodos));\n    }\n\n    return (\n        <div key={todo.id} className={`flex gap-4 p-4 items-center border hover:shadow-glow-5 ${todo.completed && \"brightness-50\"}`}>\n            <input type=\"checkbox\" className=\"w-5 h-5 cursor-pointer\" checked={todo.completed} onClick={() => handleCompletion(todo.id)} />\n            <input disabled={!!!editable} className={inputStyle} value={title} onChange={(e) => setTitle(String(e.target.value))} />\n            <p>{todo.description}</p>\n            <div>\n                <button disabled={todo.completed} onClick={() => setEditable(!editable)} className=\"py-2 px-3 border hover:shadow-glow-2 disabled:hover:shadow-none disabled:cursor-not-allowed\">{\n                    editable ? \"Save\" : \"Edit\"\n                }</button>\n                <button onClick={() => deleteTodo(todo.id)} className=\"py-2 px-3 brightness-100 border hover:shadow-glow-2\">Delete</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Todo;\n","import React, { useState, useEffect } from \"react\";\nimport Todo from \"../components/Todo\";\nimport ITodo from \"../types/Todo\";\n\nconst LandingPage: React.FC = () => {\n    const [todos, setTodos] = useState<ITodo[]>([]);\n    const [title, setTitle] = useState<string>(\"\");\n    const [error, setError] = useState<string | null>(null);\n\n    useEffect(() => {\n        const todos = localStorage.getItem(\"todos\");\n        if (todos) {\n            setTodos(JSON.parse(todos));\n        }\n    }, []);\n\n    const addTodo = () => {\n        if (title === \"\") {\n            return setError(\"Title cannot be empty\");\n        }\n        setError(null);\n\n        const todo: ITodo = {\n            id: new Date().toISOString(),\n            title: title,\n            description: null,\n            completed: false\n        }\n\n        setTodos([...todos, todo]);\n        localStorage.setItem(\"todos\", JSON.stringify([...todos, todo]));\n    }\n\n    return (\n        <div className=\"w-screen h-screen pt-40 flex flex-col items-center gap-5\">\n            <div className=\"text-center\">\n                <h1 className=\"text-3xl font-bold\">Todo App</h1>\n                <p className=\"font-semibold\">Simple todo application. All todos are saved in local storage.</p>\n            </div>\n            <div>\n                <input placeholder=\"Add Todo\" type=\"text\" className=\"py-2 px-3 border bg-black focus:shadow-glow-2\" value={title} onChange={(e) => setTitle(e.target.value)} />\n                <button className=\"py-2 px-3 border hover:shadow-glow-2\" onClick={addTodo}>Add</button>\n                <p hidden={!!!error} className=\"text-red-500\">{error}</p>\n            </div>\n            <div className=\"max-h-[35rem] flex flex-col gap-4 items-center overflow-y-scroll\">\n                {todos.map((todo) => (\n                    <Todo key={todo.id} todo={todo} todos={todos} setTodos={setTodos} />\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default LandingPage;\n"],"names":["_ref","todo","todos","setTodos","_useState","useState","title","_useState2","_slicedToArray","setTitle","_useState3","_useState4","editable","setEditable","_jsxs","className","concat","completed","children","_jsx","type","checked","onClick","id","updatedTodos","map","localStorage","setItem","JSON","stringify","handleCompletion","disabled","value","onChange","e","String","target","description","filter","deleteTodo","_useState5","_useState6","error","setError","useEffect","getItem","parse","placeholder","Date","toISOString","_toConsumableArray","hidden","Todo"],"sourceRoot":""}