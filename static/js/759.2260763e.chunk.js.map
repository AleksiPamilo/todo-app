{"version":3,"file":"static/js/759.2260763e.chunk.js","mappings":"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","sources":["components/CreateTodo.tsx","components/Todo.tsx","sites/Todos.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport ITodo from \"../types/Todo\";\n\ntype CreateTodoProps = {\n    todos: ITodo[];\n    setTodos: React.Dispatch<React.SetStateAction<ITodo[]>>\n};\nconst CreateTodo: React.FC<CreateTodoProps> = ({ todos, setTodos }) => {\n    const [title, setTitle] = useState<string>(\"\");\n    const [error, setError] = useState<string | null>(null);\n\n    const addTodo = () => {\n        if (title === \"\") {\n            return setError(\"Title cannot be empty\");\n        }\n        setError(null);\n\n        const todo: ITodo = {\n            id: Date.now().toString(36) + Math.random().toString(36).substring(2),\n            title: title,\n            description: null,\n            completed: false\n        }\n\n        setTodos([...todos, todo]);\n        localStorage.setItem(\"todos\", JSON.stringify([...todos, todo]));\n    }\n\n    return (\n        <div className=\"flex flex-col\">\n            <div className=\"flex gap-2\">\n                <input placeholder=\"Add Todo\" type=\"text\" className=\"py-2 px-3 w-[25rem] rounded-md border border-zinc-700 bg-zinc-900 focus:outline-none focus:border-zinc-600\" value={title} onChange={(e) => setTitle(e.target.value)} />\n                <button className=\"py-2 px-4 rounded-md bg-zinc-900 border border-zinc-700 hover:bg-zinc-800\" onClick={addTodo}>Add</button>\n            </div>\n            <p hidden={!!!error} className=\"text-left my-2 text-red-500\">{error}</p>\n        </div>\n    )\n}\n\nexport default CreateTodo;\n","import React, { useState } from \"react\";\nimport ITodo from \"../types/Todo\";\n\ntype TodoProps = {\n    todo: ITodo;\n    todos: ITodo[];\n    setTodos: React.Dispatch<React.SetStateAction<ITodo[]>>\n};\n\nconst Todo: React.FC<TodoProps> = ({ todo, todos, setTodos }) => {\n    const [title, setTitle] = useState<string>(todo.title);\n    const [editable, setEditable] = useState<boolean>(false);\n    const inputStyle = \"py-2 px-3 rounded-lg border border-zinc-900 bg-[#101010] disabled:bg-transparent disabled:border-0\";\n\n    const deleteTodo = (id: string) => {\n        const updatedTodos = todos.filter((todo) => todo.id !== id);\n        setTodos(updatedTodos);\n        localStorage.setItem(\"todos\", JSON.stringify(updatedTodos));\n    }\n\n    const handleCompletion = (id: string) => {\n        const updatedTodos = todos.map((todo) => {\n            if (todo.id === id) {\n                todo.completed = !todo.completed;\n            }\n\n            return todo;\n        });\n\n        setTodos(updatedTodos);\n        localStorage.setItem(\"todos\", JSON.stringify(updatedTodos));\n    }\n\n    return (\n        <div key={todo.id} className={`flex gap-4 p-4 rounded-md items-center bg-zinc-900 border border-zinc-600 cursor-pointer ${todo.completed && \"brightness-50\"}`} onClick={() => {\n            if (!todo.completed) {\n                setEditable(!editable);\n            }\n        }}>\n            <input type=\"checkbox\" className=\"w-5 h-5 cursor-pointer\" checked={todo.completed} onClick={(e) => {\n                e.stopPropagation();\n                handleCompletion(todo.id);\n            }} />\n            <input onClick={e => e.stopPropagation()} disabled={!!!editable} className={inputStyle + \" disabled:hover:cursor-pointer\"} value={title} onChange={(e) => setTitle(String(e.target.value))} />\n            <p>{todo.description}</p>\n            <div className=\"flex gap-2\">\n                <button hidden={!editable} className=\"py-2 px-3 rounded-md border border-zinc-600 hover:bg-zinc-800\" onClick={(e) => {\n                    e.stopPropagation();\n                    const updatedTodos = todos.map((item) => {\n                        if (todo.id === item.id) {\n                            todo.title = title;\n                        }\n\n                        return todo;\n                    });\n\n                    setTodos(updatedTodos);\n                    localStorage.setItem(\"todos\", JSON.stringify(updatedTodos));\n                    setEditable(!editable);\n                }}>Save</button>\n                <button className=\"py-2 px-3 rounded-md border border-zinc-600 hover:bg-zinc-800\" onClick={() => deleteTodo(todo.id)}>Delete</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Todo;\n","import React, { useState, useEffect } from \"react\";\nimport CreateTodo from \"../components/CreateTodo\";\nimport Todo from \"../components/Todo\";\nimport ITodo from \"../types/Todo\";\n\nconst Todos: React.FC = () => {\n    document.title = \"Todo App\";\n    const [todos, setTodos] = useState<ITodo[]>([]);\n\n    useEffect(() => {\n        const todos = localStorage.getItem(\"todos\");\n        if (todos) {\n            setTodos(JSON.parse(todos));\n        }\n    }, []);\n\n    return (\n        <div className=\"w-screen h-screen pt-32 flex flex-col items-center gap-5 pb-8 overflow-x-hidden overflow-y-auto\">\n            <h1 className=\"absolute top-0 left-0 px-4 py-2 text-3xl font-bold\">Todo</h1>\n            <div className=\"text-center\">\n                <CreateTodo {...{ todos, setTodos }} />\n            </div>\n            <div className=\"flex flex-wrap gap-4 justify-center items-center\">\n                {todos.sort((a, b) => {\n                    if (a.completed && !b.completed) {\n                        return 1;\n                    } else if (!a.completed && b.completed) {\n                        return -1;\n                    } else {\n                        return 0;\n                    }\n                }).map((todo) => (\n                    <Todo key={todo.id} todo={todo} todos={todos} setTodos={setTodos} />\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Todos;\n"],"names":["_ref","todos","setTodos","_useState","useState","_useState2","_slicedToArray","title","setTitle","_useState3","_useState4","error","setError","_jsxs","className","children","_jsx","placeholder","type","value","onChange","e","target","onClick","todo","id","Date","now","toString","Math","random","substring","description","completed","concat","_toConsumableArray","localStorage","setItem","JSON","stringify","hidden","editable","setEditable","checked","stopPropagation","updatedTodos","map","handleCompletion","disabled","inputStyle","String","item","filter","deleteTodo","document","useEffect","getItem","parse","CreateTodo","sort","a","b","Todo"],"sourceRoot":""}