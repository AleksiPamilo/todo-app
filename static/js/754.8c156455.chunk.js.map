{"version":3,"file":"static/js/754.8c156455.chunk.js","mappings":"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","sources":["components/Todo.tsx","sites/LandingPage.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport ITodo from \"../types/Todo\";\n\ntype TodoProps = {\n    todo: ITodo;\n    todos: ITodo[];\n    setTodos: React.Dispatch<React.SetStateAction<ITodo[]>>\n};\n\nconst Todo: React.FC<TodoProps> = ({ todo, todos, setTodos }) => {\n    const [title, setTitle] = useState<string>(todo.title);\n    const [editable, setEditable] = useState<boolean>(false);\n    const inputStyle = \"py-2 px-3 border bg-black focus:shadow-glow-2 disabled:bg-black disabled:border-0\";\n\n    const deleteTodo = (id: string) => {\n        const updatedTodos = todos.filter((todo) => todo.id !== id);\n        setTodos(updatedTodos);\n        localStorage.setItem(\"todos\", JSON.stringify(updatedTodos));\n    }\n\n    const handleCompletion = (id: string) => {\n        const updatedTodos = todos.map((todo) => {\n            if (todo.id === id) {\n                todo.completed = !todo.completed;\n            }\n\n            return todo;\n        });\n\n        setTodos(updatedTodos);\n        localStorage.setItem(\"todos\", JSON.stringify(updatedTodos));\n    }\n\n    return (\n        <div key={todo.id} className={`flex gap-4 items-center border hover:shadow-glow-5 relative `}>\n            <div className=\"border-b-4 absolute z-10 w-full rotate-[9deg] brightness-100\" hidden={!todo.completed} />\n            <div className={`flex gap-4 items-center p-4 ${todo.completed && \"brightness-50\"}`}>\n                <input type=\"checkbox\" className=\"w-5 h-5 cursor-pointer\" checked={todo.completed} onClick={() => handleCompletion(todo.id)} />\n                <input disabled={!!!editable} className={inputStyle} value={title} onChange={(e) => setTitle(String(e.target.value))} />\n                <p>{todo.description}</p>\n\n                <div>\n                    <button disabled={todo.completed} onClick={() => setEditable(!editable)} className=\"py-2 px-3 border hover:shadow-glow-2 disabled:hover:shadow-none disabled:cursor-not-allowed\">{\n                        editable ? \"Save\" : \"Edit\"\n                    }</button>\n                    <button disabled={todo.completed} onClick={() => deleteTodo(todo.id)} className=\"py-2 px-3 border hover:shadow-glow-2 disabled:hover:shadow-none disabled:cursor-not-allowed\">Delete</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Todo;\n","import React, { useState, useEffect } from \"react\";\nimport Todo from \"../components/Todo\";\nimport ITodo from \"../types/Todo\";\n\nconst LandingPage: React.FC = () => {\n    const [todos, setTodos] = useState<ITodo[]>([]);\n    const [title, setTitle] = useState<string>(\"\");\n\n    useEffect(() => {\n        const todos = localStorage.getItem(\"todos\");\n        if (todos) {\n            setTodos(JSON.parse(todos));\n        }\n    }, []);\n\n    const addTodo = () => {\n        const todo: ITodo = {\n            id: new Date().toISOString(),\n            title: title,\n            description: null,\n            completed: false\n        }\n\n        setTodos([...todos, todo]);\n        localStorage.setItem(\"todos\", JSON.stringify([...todos, todo]));\n    }\n\n    return (\n        <div className=\"w-screen h-screen pt-[20rem] flex flex-col items-center gap-5\">\n            <div className=\"text-center\">\n                <h1 className=\"text-3xl font-bold\">Todo App</h1>\n                <p className=\"font-semibold\">Simple todo application. All todos are saved in local storage.</p>\n            </div>\n            <div>\n                <input placeholder=\"Add Todo\" type=\"text\" className=\"py-2 px-3 border bg-black focus:shadow-glow-2\" value={title} onChange={(e) => setTitle(e.target.value)} />\n                <button className=\"py-2 px-3 border hover:shadow-glow-2\" onClick={addTodo}>Add</button>\n            </div>\n            <div className=\"max-h-[35rem] flex flex-col gap-4 items-center overflow-y-scroll\">\n                {todos.map((todo) => (\n                    <Todo key={todo.id} todo={todo} todos={todos} setTodos={setTodos} />\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default LandingPage;\n"],"names":["_ref","todo","todos","setTodos","_useState","useState","title","_useState2","_slicedToArray","setTitle","_useState3","_useState4","editable","setEditable","_jsxs","className","children","_jsx","hidden","completed","concat","type","checked","onClick","id","updatedTodos","map","localStorage","setItem","JSON","stringify","handleCompletion","disabled","value","onChange","e","String","target","description","filter","deleteTodo","useEffect","getItem","parse","placeholder","Date","toISOString","_toConsumableArray","Todo"],"sourceRoot":""}